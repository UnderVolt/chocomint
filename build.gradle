plugins {
    id 'java'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

apply plugin:'application'
applicationDefaultJvmArgs = ["-Djava.library.path=natives"]

mainClassName = 'Start'

group 'io.undervolt.chocomint'
version '1.1-SNAPSHOT'

sourceCompatibility = 1.17

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven {
        url 'http://ssh.undervolt.io:9452/'
        allowInsecureProtocol true
    }
}

def currentOs(){
    def osName = System.properties['os.name'].toLowerCase()
    def path = ""
    if(osName.contains("windows")){
        path = System.getProperty("user.home")+"\\AppData\\Roaming\\.minecraft"
    }else if(osName.contains("mac os")){
        path = "~/Library/Application Support/minecraft"
    }else{
        path = System.getProperty("user.home")+"/.minecraft"
    }
    return path;
}

configurations {
    extraLibs
    runtime
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    runtimeOnly 'commons-lang:commons-lang:2.6'
    implementation 'com.mojang.netty:netty:1.6',
                    'oshi-project.oshi-core:oshi-core:1.1',
                    'net.java.dev.jna.jna:jna:3.4.0',
                    'net.java.dev.jna.platform:platform:3.4.0',
                    'com.ibm.icu.icu4j-core-mojang:icu4j-core-mojang:51.2',
                    'net.sf.jopt-simple.jopt-simple:jopt-simple:4.6',
                    'com.paulscode.codecjorbis:codecjorbis:20101023',
                    'com.paulscode.codecwav:codecwav:20101023',
                    'com.paulscode.libraryjavasound:libraryjavasound:20101123',
                    'com.paulscode.librarylwjglopenal:librarylwjglopenal:20100824',
                    'org.lwjgl.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209',
                    'org.lwjgl.lwjgl.lwjgl_util:lwjgl_util:2.9.4-nightly-20150209',
                    'org.lwjgl.lwjgl.lwjgl_util:lwjgl_util:2.9.2-nightly-20140822',
                    'com.paulscode.soundsystem:soundsystem:20120107',
                    'io.netty.netty-all:netty-all:4.0.23.Final',
                    'com.google.guava.guava:guava:17.0',
                    'org.apache.commons.commons-lang3:commons-lang3:3.3.2',
                    'commons-io.commons-io:commons-io:2.4',
                    'commons-codec.commons-codec:commons-codec:1.9',
                    'net.java.jinput.jinput:jinput:2.0.5',
                    'net.java.jutils.jutils:jutils:1.0.0',
                    'com.google.code.gson.gson:gson:2.2.4',
                    'com.mojang.authlib:authlib:1.5.21',
                    'com.mojang.realms:realms:1.7.59',
                    'org.apache.commons.commons-compress:commons-compress:1.8.1',
                    'org.apache.httpcomponents.httpclient:httpclient:4.3.3',
                    'commons-logging.commons-logging:commons-logging:1.1.3',
                    'org.apache.httpcomponents.httpcore:httpcore:4.3.2',
                    'org.apache.logging.log4j.log4j-api:log4j-api:2.0-beta9',
                    'org.apache.logging.log4j.log4j-core:log4j-core:2.0-beta9',
                    'tv.twitch.twitch:twitch:6.5',
                    'tv.twitch.twitch-platform:twitch-platform-6.5-natives-windows-64:6.5-vrq',
                    'tv.twitch.twitch-external-platform:twitch-external-platform-4.5-natives-windows-64:4.5-vrq',
                    'net.java.jinput.jinput-platform:jinput-platform-2.0.5-natives-windows:2.0.5-vrq',
                    'org.lwjgl.lwjgl.lwjgl-platform:lwjgl-platform-2.9.2-nightly-20140822-natives-linux:2.9.2-nightly-20140822-vrq',
                    'org.lwjgl.lwjgl.lwjgl-platform:lwjgl-platform-2.9.4-nightly-20150209-natives-windows:2.9.4-nightly-20150209-vrq',
                    'net.java.jinput.jinput-platform:jinput-platform-2.0.5-natives-linux:2.0.5-vrq',
                    'org.jsoup:jsoup:1.12.1'
    extraLibs 'com.google.guava:guava:28.1-jre',
            'com.github.Vatuu:discord-rpc:1.6.2',
            'io.socket:socket.io-client:1.0.0'
    configurations.implementation.extendsFrom(configurations.extraLibs)
    configurations.runtime.extendsFrom(configurations.implementation)
}

run {
    println "Launching Client"
    workingDir = new File("jars")
    buildDir = 'jars'
    if(!workingDir.exists()) workingDir.mkdir();
}

task unzipNatives(type: Copy) {
    println "Unzipping natives:"
    duplicatesStrategy = 'include'
    configurations.runtime.each {
        if(it.name.contains("natives") && !it.name.contains(".dll")){
            println " * "+it.name
            from(zipTree(it))
        }
    }
    into "jars/natives"
}

task copyAssets(type: Copy) {
    duplicatesStrategy = 'exclude'
    println "Copying assets from: " + currentOs()
    from currentOs()+"/assets"
    into "jars/assets"
}

task startGame {
    dependsOn 'unzipNatives'
    dependsOn 'copyAssets'
    dependsOn 'run'
    tasks.findByName('unzipNatives').mustRunAfter 'copyAssets'
    tasks.findByName('run').mustRunAfter 'unzipNatives'
}